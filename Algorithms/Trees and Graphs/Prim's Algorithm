        	//    I solemnly swear that I am upto no good //

#include <bits/stdc++.h>
#define sub   freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
using namespace std;
#define ll long long
#define pb push_back
#define endl "\n"
#define input(arr,n) for(ll i1=0;i1<n;i1++ )cin>>arr[i1]
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define mod 1000000007
#define all(x) x.begin(),x.end()
#define mp make_pair
#define ff first
#define ss second
#define NN cout<<"NO"<<endl;
#define YY cout<<"YES"<<endl;
#define ub upper_bound
#define lb lower_bound
#define A 1000001
#define make(a,b,c) make_pair(a,make_pair(b,c)) 
bool comp(ll a,ll b){
	return a>b;
}

//  It's kinda like Dijkstra. 

ll n;
std::vector<pair<int,int>> adj[1000007];

ll min_spann(int src){
	set<pair<int,int>> s;
	ll weight=0;
	std::vector<ll> vis(n+1);
	s.insert(mp(0,1));
	while(!s.empty()){
		auto p=*s.begin();
		s.erase(s.begin());
		int u=p.ss;
		if(vis[u])continue; // checking cycles
		else vis[u]=1;
		weight+=p.ff;
		for(auto it:adj[u]){
			if(vis[it.ff]==0){
				s.insert(mp(it.ss,it.ff));
			}
		}
	}
	return weight;
}


void solve(){
	ll m;
	cin>>n>>m;
	
	for(int i=0;i<m;i++){
		ll a,b,c;
		cin>>a>>b>>c;
		adj[a].pb(mp(b,c));
		adj[b].pb(mp(a,c));
	}
	ll weight=min_spann(1);
	cout<<weight<<endl;

}


int main(){	
    sub;    
    fast;
   	int t=1;
    // cin>>t;
    while(t--){
    	solve();
	}
    return 0;
}        

        		        // Mischief Managed //    
