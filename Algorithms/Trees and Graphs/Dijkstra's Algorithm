
                        //    I solemnly swear that I am upto no good //

#include <bits/stdc++.h>
using namespace std;
#define sub             freopen("input.txt", "r", stdin);//freopen("output.txt", "w", stdout);
#define ll              long long
#define ld              long double
#define ttime           cerr << '\n'<<"Time (in s): " << double(clock() - clk) * 1.0 / CLOCKS_PER_SEC << '\n';
#define pb              push_back
#define ff              first
#define ss              second

const long long INF=1e18;
#define endl "\n"
// #define int ll

typedef pair<ll,ll> pairll;
typedef map<ll,ll>  mapll;
typedef map<char,ll> mapch;
bool comp(ll a,ll b){
    return a>b;
}

ll n,k,tt=1,m;
void solve(){
    cin>>n>>m;                  // no. of vertices and edges
    vector<pairll> adj[n+1];    // adjecency list
    for(int i=0;i<m;i++){
        ll a,b,c;
        cin>>a>>b>>c;
        adj[a].pb({b,c});
        adj[b].pb({a,c});       // For undirected graph
    }
    vector<ll> dist(n+1, INF);
    dist[1]=0;
    priority_queue<pairll, vector<pairll> , greater<pairll> > q;
    q.push({0,1});              // dist of 1 from 1 is 0
    while(!q.empty()){
        pairll u=q.top();
        q.pop();
        for(auto it:adj[u.second]){
            if(dist[it.first]  > u.ff+it.ss){
                dist[it.ff] = u.ff+it.ss;
                q.push({dist[it.ff], it.ff});
            }
        }
    }
    for(int i=1;i<=n;i++){
        cout<<dist[i]<<" ";
    }
    cout<<endl;
}

signed main(){ 
    // sub;    
    
    ll t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}        

                                // Mischief Managed //   
                                         
